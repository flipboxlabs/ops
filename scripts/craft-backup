#!/usr/bin/env bash

#### Run bash dump script
#
#```bash
# ./bin/sql-backup-server.sh
# Require variables:
# - CRAFT_ENVIRONMENT
# - DEVOPS_BUCKET
# - DB_SERVER
# - DB_USER
# - DB_PASSWORD
# - DB_DATABASE
#```

if [[ ! -z "${CRAFT_DB_SERVER}" ]]; then 
    DB_SERVER=$CRAFT_DB_SERVER
fi

if [[ ! -z "${CRAFT_DB_USER}" ]]; then 
    DB_USER=$CRAFT_DB_USER
fi

if [[ ! -z "${CRAFT_DB_PASSWORD}" ]]; then 
    DB_PASSWORD=$CRAFT_DB_PASSWORD
fi

if [[ ! -z "${CRAFT_DB_DATABASE}" ]]; then 
    DB_DATABASE=$CRAFT_DB_DATABASE
fi

if [[ ! -z "${CRAFT_DB_TABLE_PREFIX}" ]]; then 
    DB_TABLE_PREFIX=$CRAFT_DB_TABLE_PREFIX
fi

BACKUP_DIR="/tmp/backups"

FILE=$BACKUP_DIR/backup-`date +%Y%m%d-%H%M%S`.sql

if [ -z "${DEVOPS_BUCKET}" ]; then
    echo "Variable DEVOPS_BUCKET is required."
    exit 1
fi

if [ ! -d "$BACKUP_DIR" ]; then
    mkdir $BACKUP_DIR;
fi

if [ ! -z "${DB_TABLE_PREFIX}" ]; then
    DB_TABLE_PREFIX=${DB_TABLE_PREFIX}_
fi

CONNECTION="-h $DB_SERVER -u $DB_USER -p$DB_PASSWORD -P 3306"

echo "Running command on $DB_DATABASE > $FILE"

mysqldump  $CONNECTION \
    --no-tablespaces \
    --single-transaction \
    --add-drop-table \
    --skip-triggers \
    $DB_DATABASE > $FILE

du -h $FILE

S3_DIR=s3://${DEVOPS_BUCKET}/db-backups/${CRAFT_ENVIRONMENT}/`date +%Y%m%d`/
echo "Command finished, uploading to $S3_DIR"


# TODO - Add more control over the placement of the file on s3 (prefix, datestamp, craft environment, etc)
gzip $FILE &&  aws s3 sync ${BACKUP_DIR} "$S3_DIR";

echo "Copy to latest."
aws s3 cp ${FILE}.gz s3://${DEVOPS_BUCKET}/db-backups/${CRAFT_ENVIRONMENT}/latest.sql.gz
